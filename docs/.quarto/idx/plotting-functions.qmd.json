{"title":"Plots","markdown":{"yaml":{"title":"Plots","subtitle":"Overview of all plotting functions"},"headingText":"Initialization","containsRefs":false,"markdown":"\n\n```{r, include = FALSE}\nlibrary(fontawesome)\n```\n\nThis page provides example calls and outputs for each of the plotting functions contained within `agate`. There are plotting functions that may be useful during survey planning, active piloting, and in post-processing and analysis, and the plots are grouped by those categories below.\n\nBasic details for each plotting function are available within the standard MATLAB-type documentation in the header of each function and include a detailed description, info on input and output arguments, and examples. These details can be pulled up by typing `doc function` or `help function` within the MATLAB Command Window.\n\n\nTo run any of the `agate` plotting functions, the toolbox must be initialized with a configuration file. \n\nNo configuration file yet? Go back to [Get started - Create configuration files](get-started.html#create-configuration-files). At a minimum, the configuration file must include the top *required* portion, as well as the *optional - plotting* section.\n\n```default\n% ensure agate is on the path\n\n% initialize with specified configuration file, 'agate_config.cnf'\nagate agate_config.cnf\n\n% initialize with prompt to select configuration file\nagate\n```\n\nMost of the plotting functions rely on a `pp` (piloting parameters) variable that is a large table with various outputs from the .nc and .log files compiled in one place. If this has already be created, it can be loaded directly. If not, use `extractPilotingParams` to build it. \n\n```default\n% load existing pp table\nload(fullfile(CONFIG.path.mission, 'flightStatus', ['diveTracking_' CONFIG.glider '.mat']))\n\n% create new pp table\npp = extractPilotingParams(CONFIG, fullfile(CONFIG.path.mission, 'basestationFiles'), ...\nfullfile(CONFIG.path.mission, 'flightStatus'), 0);\n% zero as last argument creates it from scratch (does not load any previous tables)\nsave(fullfile(CONFIG.path.mission, 'flightStatus', ['diveTracking_' CONFIG.glider '.mat']), 'pp');\n\n```\n\n<sub>[Back to top](#)</sub>\n\n## Piloting plots\n\nSome of the below piloting plots are also available withing the Seaglider Piloting Tools, but `agate` allows for more automated plotting (without the GUI) and tries to improve on some of those existing plots, either with better labels, more detail, or addition of acoustic inputs. \n\n### Humidity and pressure\n\n```default\nplotHumidityPressure(CONFIG, pp)\n```\n\n![](images/examplePlots/sg639_humidityPressure.png){#humid-press fig-align='center' width=50%}\n\n### Minimum voltage\n\nRev B gliders (e.g., SG639 - left side) will have two lines - one each for the '24V' and '10V' batteries (even if both are 15V), while Rev E gliders (e.g., SG679 - right side) will also have two lines, but the `10V` line will primarily remain at 15V and only the `24V` line will decrease over the mission. \n\n```default\nplotMinVolt(CONFIG, pp)\n```\n\n::: {#min-volt layout-ncol=2}\n![](images/examplePlots/sg639_minimumVoltage.png){#min-volt-639}\n\n![](images/examplePlots/sg679_minimumVoltage.png){#min-volt-679}\n:::\n\n### Battery remaining and PAM free space\n\nIf the glider is using a PMAR acoustic system, the free space remaining on each SD card will plot with the remaining battery capacity. \n\nThe 30% battery line and 35 GB PMAR line are hard coded into the plot, but could be modified within the function. The 'target mission duration' line is defined by `CONFIG.tmd`, as set in the configuration file. \n\n```default\nplotBattUseFreeSpace(CONFIG, pp)\n```\n\n![](images/examplePlots/sg639_battUseFreeSpace.png){#batt-free-639 fig-align='center' width=50%}\n\n### Voltage use by device\nIf the glider is using a PMAR or WISPR acoustic system, power draw of the acoustic system will be included with measures of pitch, roll, and VBD. \n\n```default\nplotVoltagePackUse(CONFIG, pp)\n```\n\n::: {#use layout-ncol=2}\n![](images/examplePlots/sg639_usageByDevice.png){#use-639}\n\n![](images/examplePlots/sg679_usageByDevice.png){#use-679}\n:::\n\n### Voltage use by device, normalized by dive duration\n\nIf the glider is using a PMAR or WISPR acoustic system, power draw of the acoustic system will be included with measures of pitch, roll, and VBD.\n\n```default\nplotVoltagePackUse_norm(CONFIG, pp)\n```\n\n::: {#use-norm layout-ncol=2}\n\n![](images/examplePlots/sg639_usageByDevice_normalized.png){#use-norm-639}\n\n![](images/examplePlots/sg679_usageByDevice_normalized.png){#use-norm-679}\n\n:::\n\n### Map\n\nThe map will include the waypoints and track from the targets file and will plot the surface positions of each dive (yellow dots), with red lines connecting surface positions, currents plotted as blue vector arrows, and the next target waypoint with a green circle.\n\nMap extent (latitude and longitude limits), the location of the north arrow, and the location and scale of the scale bar are all set within the configuration file, with example values below. `CONFIG.latLim` and `CONFIG.map.lonLim` are required to make the map; the north arrow and scale bar are optional and if those settings do not exist in `CONFIG` they will not be included in the plot. \n\nIn this example, bathymetry is plotted, specified by `CONFIG.map.bathyFile`. That last argument can be left out to not plot bathymetry (which can be slow depending on the resolution of the selected bathymetry raster). If the last argument is set to `1`, a prompt will appear to select the correct bathymetry file. \n\nHigh resolution bathymetry TIFF files can be downloaded from  [NCEI](https://www.ncei.noaa.gov/products/etopo-global-relief-model). Depending on the needed resolution, the 60 arc second TIFF may be sufficient, and is a reasonable size for download and plotting, but is slow to load because it covers the whole globe. Alternatively, finer resolution (15-60 arc second resolution options) for the specific area of interest can be extracted using the [ETOPO Grid Extract tool](https://www.ncei.noaa.gov/maps/grid-extract/) to download a TIFF that covers a smaller area, but in a smaller sized file for faster loading and plotting. \n\n```default\ntargetsFile = fullfile(CONFIG639.path.mission, 'targets');\n\n% map set up configurations - all should be specified in configuration file \nCONFIG.map.latLim = [19.0 22.75];\nCONFIG.map.lonLim = [-160.0 -154.25];\nCONFIG.map.naLat = 22.15;\nCONFIG.map.naLon = -154.5;\nCONFIG.map.scalePos = [-0.04 0.34];\nCONFIG.map.scaleMajor = [0:50:100];\nCONFIG.map.scaleMinor = [0:12.5:25];\n\n% plot with bathymetry - file specified \nplotGliderPath_etopo(CONFIG, pp, targetsFile, CONFIG.map.bathyFile);\n\n% plot with bathymetry - prompt for bathy file\nplotGliderPath_etopo(CONFIG, pp, targetsFile, 1);\n\n% plot without bathymetry\nplotGliderPath_etopo(CONFIG, pp, targetsFile);\n```\n\n![](images/examplePlots/sg639_map.png){#map fig-align='center' width=80%}\n\n<sub>[Back to top](#)</sub>\n\n\n\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","filters":["quarto"],"toc":true,"toc-depth":4,"embed-resources":true,"output-file":"plotting-functions.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.475","theme":{"light":"theme.scss","dark":["cosmo","theme-dark.scss"]},"code-copy":true,"title":"Plots","subtitle":"Overview of all plotting functions"},"extensions":{"book":{"multiFile":true}}}}}